name: Package Application with Pyinstaller

on:
  push:
    branches: 
      - pyinstaller_tests

jobs:
  build:
    if: contains(github.event.head_commit.message, 'Release')
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Release Tag
        run: echo "RELEASE_TAG=$(echo ${GITHUB_SHA::5})" >> $GITHUB_ENV

      - name: Package Application
        uses: JackMcKew/pyinstaller-action-windows@main
        with:
          path: src


      - name: Create temp application directory
        run: mkdir -p application

      - name: Copy application to temp directory
        run: cp src/dist/windows/cta_matrix_iv.exe application/cta_matrix_iv.exe

      - name: Copy src/voice.mp3 to temp directory
        run: cp src/voice.mp3 application/voice.mp3

      - name: Copy README.md to temp directory
        run: cp README.md application/README.md

      - name: Install Chocolatey
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
        
      - name: Add Chocolatey to PATH
        run: refreshenv
                
      - name: Package application into Windows installer
        run: |
          choco install -y nsis
             -V4 -DReleaseTag=${RELEASE_TAG} -DAppVersion=${RELEASE_TAG} -DAppPath=application application/cta_matrix_iv.nsi

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PAT }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: ${{ env.RELEASE_TAG }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: application/cta_matrix_iv.nsi
          asset_name: cta_matrix_iv.nsi
          asset_content_type: application/octet-stream
